-- 개발계 프로시저 테스트

CREATE PROCEDURE `DATE_TEST` ()
BEGIN
    DECLARE last_year VARCHAR(100);
    DECLARE last_month VARCHAR(100);

       SET last_year  = DATE_SUB(NOW(), INTERVAL 1 YEAR);
    SET last_month = DATE_SUB(last_year, INTERVAL  1 MONTH);

    SELECT last_month;
end;


-- PROCEDURE 로그 테이블
CREATE TABLE CIS_DESTORY_PRIVATE_INFO_HISTORY (
    SEQNO INT AUTO_INCREMENT PRIMARY KEY ,
    CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ADD_DT TIMESTAMP NOT NULL,
    DEL_EXCHANGE_CTN INT NOT NULL,
    DEL_EXCHANGE_DETAIL_CTN INT NOT NULL
);

SELECT * FROM CIS_DESTORY_PRIVATE_INFO_HISTORY;

SELECT CURRENT_TIMESTAMP();

select DATE_SUB(NOW(), INTERVAL 1 YEAR);

SELECT CONCAT(DATE_FORMAT(date_add(NOW(),INTERVAL -1 YEAR), '%Y-%m'), '-01 00:00:00') FROM dual;

SELECT  date_add(NOW(), INTERVAL -1 YEAR) FROM DUAL ;

-- PROCEDURE 이름 바꾸고 확인  (1)  --> MOCAH_UPLUS에다가 적용  --->
CREATE PROCEDURE `DESTORY_PRIVATE_INFO` ()
BEGIN
    DECLARE CHK_DATE VARCHAR(100);

    DECLARE DEL_EXC_CNT INT;
    DECLARE DEL_EXC_DETAIL_CNT INT;

    -- INTERVAL 1 YEAR로 바뀔 예정
    SET CHK_DATE = CONCAT(DATE_FORMAT(date_add(NOW(),INTERVAL -1 YEAR), '%Y-%m'), '-01 00:00:00');

    SET DEL_EXC_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE);
    SET DEL_EXC_DETAIL_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE);

    -- HISTORY TABLE 적제                           AUTO KEY ,  PROCEDURE 실행시점, 삭제 될 날짜 , 삭제 될 데이터 카운트, 삭제 될 데이터 카운트 (DETAIL)
    INSERT INTO CIS_DESTORY_PRIVATE_INFO_HISTORY VALUES(NULL,CURRENT_TIMESTAMP(), CHK_DATE, DEL_EXC_CNT , DEL_EXC_DETAIL_CNT);

    -- 삭제 테이블 에 적재
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE SELECT * FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE_DETAIL SELECT * FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

    -- 해당 내역 삭제
    DELETE FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    DELETE FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

end;



SELECT * FROM CIS_DESTORY_PRIVATE_INFO_HISTORY;
SELECT COUNT(*) FROM DEL_TGT_CIS_UPLUS_EXCHANGE WHERE ADD_DT < '2023-04-08 13:18:28';



CALL DATE_TEST();
CALL DESTORY_PRIVATE_INFO();


-- 개인 정보 파기 삭제 이벤트 : 매월 1월 1일에 돌게 하는 스케줄러
--  테스트로 매일 00시 10분에 돌게 함  : 테스트로 2일 동안 도는거 확인 후 적용
CREATE EVENT DESTROY_MONTHLY_EVENT
ON SCHEDULE EVERY 1 DAY
STARTS CONCAT(DATE_FORMAT(NOW(), '%Y-%m-%d'), ' 00:10:00')
DO
BEGIN
    CALL DESTORY_PRIVATE_INFO();
END;




=====
-- 운영계

-- PROCEDURE HISTORY 테이블
CREATE TABLE CIS_DESTORY_PRIVATE_INFO_HISTORY (
    SEQNO INT AUTO_INCREMENT PRIMARY KEY ,
    CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ADD_DT TIMESTAMP NOT NULL,
    DEL_EXCHANGE_CTN INT NOT NULL,
    DEL_EXCHANGE_DETAIL_CTN INT NOT NULL
);

-- CREATE_AT NOT NULL 조건 추가
ALTER TABLE CIS_DESTORY_PRIVATE_INFO_HISTORY MODIFY COLUMN CREATE_AT TIMESTAMP NOT NULL;

SELECT *  FROM CIS_DESTORY_PRIVATE_INFO_HISTORY;

-- 개발계와 동일하게 맞추기 위해
CREATE TABLE DEL_TGT_CIS_UPLUS_EXCHANGE LIKE CIS_UPLUS_EXCHANGE;
CREATE TABLE DEL_TGT_CIS_UPLUS_EXCHANGE_DETAIL LIKE CIS_UPLUS_EXCHANGE_DETAIL;

-- PROCEDURE
CREATE PROCEDURE `DESTORY_PRIVATE_INFO` ()
BEGIN
    DECLARE CHK_DATE VARCHAR(100);

    DECLARE DEL_EXC_CNT INT;
    DECLARE DEL_EXC_DETAIL_CNT INT;

    -- INTERVAL 1 YEAR로 바뀔 예정
    SET CHK_DATE = CONCAT(DATE_FORMAT(date_add(NOW(),INTERVAL -1 YEAR), '%Y-%m'), '-01 00:00:00');

    SET DEL_EXC_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE);
    SET DEL_EXC_DETAIL_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE);

    -- HISTORY TABLE 적제                           AUTO KEY ,  PROCEDURE 실행시점, 삭제 될 날짜 , 삭제 될 데이터 카운트, 삭제 될 데이터 카운트 (DETAIL)
    INSERT INTO CIS_DESTORY_PRIVATE_INFO_HISTORY VALUES(NULL,CURRENT_TIMESTAMP(), CHK_DATE, DEL_EXC_CNT , DEL_EXC_DETAIL_CNT);

    -- 삭제 테이블 에 적재
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE SELECT * FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE_DETAIL SELECT * FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

    -- 해당 내역 삭제
    DELETE FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    DELETE FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

end;

-- 이벤트


====
-- UPLUS

-- PROCEDURE HISTORY TABLE
CREATE TABLE CIS_DESTORY_PRIVATE_INFO_HISTORY (
    SEQNO INT AUTO_INCREMENT PRIMARY KEY ,
    CREATE_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD_DT TIMESTAMP NOT NULL,
    DEL_EXCHANGE_CTN INT NOT NULL,
    DEL_EXCHANGE_DETAIL_CTN INT NOT NULL
);

SELECT *  FROM CIS_DESTORY_PRIVATE_INFO_HISTORY;

-- CREATE_AT NOT NULL 조건 추가
ALTER TABLE CIS_DESTORY_PRIVATE_INFO_HISTORY MODIFY COLUMN CREATE_AT TIMESTAMP NOT NULL;

-- PROCEDURE
CREATE PROCEDURE `DESTORY_PRIVATE_INFO` ()
BEGIN
    DECLARE CHK_DATE VARCHAR(100);

    DECLARE DEL_EXC_CNT INT;
    DECLARE DEL_EXC_DETAIL_CNT INT;

    -- INTERVAL 1 YEAR로 바뀔 예정
    SET CHK_DATE = CONCAT(DATE_FORMAT(date_add(NOW(),INTERVAL -1 YEAR), '%Y-%m'), '-01 00:00:00');

    SET DEL_EXC_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE);
    SET DEL_EXC_DETAIL_CNT = (SELECT COUNT(1) FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE);

    -- HISTORY TABLE 적제                           AUTO KEY ,  PROCEDURE 실행시점, 삭제 될 날짜 , 삭제 될 데이터 카운트, 삭제 될 데이터 카운트 (DETAIL)
    INSERT INTO CIS_DESTORY_PRIVATE_INFO_HISTORY VALUES(NULL,CURRENT_TIMESTAMP(), CHK_DATE, DEL_EXC_CNT , DEL_EXC_DETAIL_CNT);

    -- 삭제 테이블 에 적재
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE SELECT * FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    INSERT INTO DEL_TGT_CIS_UPLUS_EXCHANGE_DETAIL SELECT * FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

    -- 해당 내역 삭제
    DELETE FROM CIS_UPLUS_EXCHANGE WHERE ADD_DT < CHK_DATE;
    DELETE FROM CIS_UPLUS_EXCHANGE_DETAIL WHERE ADD_DT < CHK_DATE;

end


-- 이벤트





